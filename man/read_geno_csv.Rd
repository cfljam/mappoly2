% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read.R
\name{read_geno_csv}
\alias{read_geno_csv}
\title{Read Genetic Marker Data from a CSV File}
\usage{
read_geno_csv(
  file.in,
  ploidy.p1,
  ploidy.p2 = ploidy.p1,
  name.p1 = NULL,
  name.p2 = NULL,
  filter.non.conforming = TRUE,
  filter.redundant = TRUE,
  verbose = TRUE
)
}
\arguments{
\item{file.in}{A character string specifying the name or full path to the
input file.}

\item{ploidy.p1}{The ploidy level of parent 1.}

\item{ploidy.p2}{The ploidy level of parent 2.}

\item{name.p1}{The name of parent 1.}

\item{name.p2}{The name of parent 2.}

\item{filter.non.conforming}{Logical. If \code{TRUE} (default), data points
with unexpected genotypes (e.g., double reduction) are converted to 'NA'.
Refer to the \code{\link[mappoly]{segreg_poly}} function for details on
expected genotype classes and their frequencies.}

\item{filter.redundant}{Logical. If \code{TRUE} (default), removes redundant
markers during map construction, retaining annotations for export in the
final map.}

\item{verbose}{Logical. If \code{TRUE} (default), displays progress updates;
if \code{FALSE}, no output is provided.}
}
\value{
Returns an object of class \code{mappoly2.data} containing a
list with the following components:
\describe{
\item{ploidy.p1}{Ploidy level of the first parent.}
\item{ploidy.p2}{Ploidy level of the second parent.}
\item{n.ind}{Number of individuals.}
\item{n.mrk}{Total number of markers.}
\item{ind.names}{Names or identifiers of the individuals.}
\item{mrk.names}{Names or identifiers of the genetic markers.}
\item{name.p1}{Name or identifier of the first parent.}
\item{name.p2}{Name or identifier of the second parent.}
\item{dosage.p1}{Dosage for the first parent.}
\item{dosage.p2}{Dosage for the second parent.}
\item{chrom}{Chromosome numbers for all markers.}
\item{genome.pos}{Physical positions on the genome for the genetic markers.}
\item{ref}{Reference DNA sequence data for the genetic markers.}
\item{alt}{Alternate DNA sequence data for the genetic markers.}
\item{all.mrk.depth}{Depth of coverage for all genetic markers. NULL when using CSV input files.}
\item{geno.dose}{A matrix containing the dosage for each marker (rows) for each individual (columns).}
\item{redundant}{A list of non-redundant markers and their equivalent redundant markers if \code{filter.redundant} is TRUE.}
\item{QAQC.values}{A list containing quality assurance and quality control values with the following components:
\describe{
\item{$markers}{A data frame with statistics for each marker, including \code{miss} (missing data rate), \code{chisq.pval} (chi-squared test p-value), and \code{read.depth} (read depth).}
\item{$individuals}{A data frame with statistics for each individual, including \code{miss} (missing data rate) and \code{full.sib} (indicator of non-belonging to the analyzed bi-parental cross, generated by \code{\link[mappoly]{filter_individuals}}).}
}
}
}
}
\description{
This function reads genetic marker data from a comma-separated values (CSV)
file and returns an object of class \code{mappoly2.data}.
}
\details{
The CSV file should have rows representing markers, with the first row serving
as the header. The first seven columns are expected to contain the marker
names, the dosages in parents 1 and 2, chromosome information (e.g.,
chromosome, scaffold, contig), the position of the marker within the
sequence, and the alternate and reference alleles, if available.
In the absence of allele information, the values should be NA. The remaining
columns should contain the dosage for each member of the full-sib population.
See the \code{Examples} section for a tetraploid example.
}
\examples{
\donttest{
tempfl <- list.files(system.file('extdata', package = 'mappoly2'),
                     full.names = TRUE)
SolCAP.dose <- read_geno_csv(file.in = tempfl,
                             ploidy.p1 = 4,
                             name.p1 = "Atlantic",
                             name.p2 = "B1829-5")
print(SolCAP.dose, detailed = TRUE)
plot(SolCAP.dose)
}
}
\author{
Marcelo Mollinari, \email{mmollin@ncsu.edu}
}
